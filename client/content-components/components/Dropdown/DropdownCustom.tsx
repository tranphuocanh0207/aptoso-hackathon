import { useEffect, useRef, useState } from "react"

interface Props {
  view?: React.ReactNode
}

const IconSetting = (
  <svg
    width="16"
    height="17"
    viewBox="0 0 16 17"
    fill="none"
    xmlns="http://www.w3.org/2000/svg">
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M9.51921 1.93499C9.27231 1.8335 8.95932 1.8335 8.33333 1.8335C7.70735 1.8335 7.39435 1.8335 7.14746 1.93499C6.81827 2.07032 6.55673 2.32988 6.42037 2.65658C6.35813 2.80572 6.33377 2.97916 6.32423 3.23216C6.31022 3.60395 6.11811 3.94809 5.79344 4.13412C5.46879 4.32014 5.07243 4.31319 4.74099 4.13934C4.51545 4.02103 4.35192 3.95524 4.19066 3.93417C3.83739 3.88802 3.48012 3.98302 3.19744 4.1983C2.98542 4.35975 2.82893 4.62876 2.51594 5.16678C2.20294 5.70481 2.04645 5.97382 2.01156 6.23677C1.96506 6.58736 2.06079 6.94194 2.2777 7.22248C2.3767 7.35053 2.51585 7.45818 2.7318 7.59285C3.04928 7.79082 3.25355 8.12807 3.25353 8.50018C3.25351 8.87225 3.04924 9.20945 2.7318 9.40739C2.51581 9.54208 2.37665 9.64973 2.27763 9.7778C2.06072 10.0583 1.96499 10.4129 2.0115 10.7635C2.04638 11.0265 2.20288 11.2955 2.51587 11.8335C2.82886 12.3715 2.98536 12.6405 3.19737 12.802C3.48005 13.0173 3.83733 13.1123 4.19059 13.0661C4.35185 13.045 4.51537 12.9793 4.74089 12.861C5.07235 12.6871 5.46873 12.6802 5.79341 12.8662C6.11809 13.0522 6.31022 13.3964 6.32424 13.7682C6.33377 14.0212 6.35813 14.1946 6.42037 14.3437C6.55673 14.6704 6.81827 14.93 7.14746 15.0653C7.39435 15.1668 7.70735 15.1668 8.33333 15.1668C8.95932 15.1668 9.27231 15.1668 9.51921 15.0653C9.8484 14.93 10.1099 14.6704 10.2463 14.3437C10.3085 14.1946 10.3329 14.0212 10.3424 13.7681C10.3564 13.3964 10.5485 13.0522 10.8732 12.8662C11.1979 12.6801 11.5943 12.6871 11.9257 12.8609C12.1512 12.9792 12.3148 13.045 12.476 13.0661C12.8293 13.1122 13.1865 13.0172 13.4692 12.8019C13.6812 12.6405 13.8377 12.3715 14.1507 11.8334C14.4637 11.2954 14.6202 11.0264 14.6551 10.7635C14.7016 10.4129 14.6059 10.0583 14.389 9.77775C14.29 9.64969 14.1508 9.54204 13.9348 9.40736C13.6174 9.20941 13.4131 8.87218 13.4131 8.5001C13.4132 8.12806 13.6174 7.79088 13.9348 7.59296C14.1508 7.45826 14.29 7.3506 14.389 7.22253C14.6059 6.94198 14.7017 6.58741 14.6552 6.23681C14.6203 5.97386 14.4638 5.70485 14.1508 5.16683C13.8378 4.62881 13.6813 4.35979 13.4693 4.19834C13.1866 3.98307 12.8293 3.88806 12.4761 3.93422C12.3148 3.95529 12.1513 4.02107 11.9258 4.13936C11.5943 4.31322 11.1979 4.32017 10.8733 4.13414C10.5486 3.9481 10.3564 3.60394 10.3424 3.23212C10.3329 2.97915 10.3085 2.80572 10.2463 2.65658C10.1099 2.32988 9.8484 2.07032 9.51921 1.93499ZM8.33333 10.5002C9.44631 10.5002 10.3486 9.60473 10.3486 8.50016C10.3486 7.39559 9.44631 6.50016 8.33333 6.50016C7.22035 6.50016 6.3181 7.39559 6.3181 8.50016C6.3181 9.60473 7.22035 10.5002 8.33333 10.5002Z"
      fill="white"
    />
  </svg>
)

const IconLogout = (
  <svg
    width="16"
    height="17"
    viewBox="0 0 16 17"
    fill="none"
    xmlns="http://www.w3.org/2000/svg">
    <path
      d="M6.00146 5.16659C6.00954 3.71657 6.07384 2.93129 6.58609 2.41904C7.17188 1.83325 8.11469 1.83325 10.0003 1.83325L10.667 1.83325C12.5526 1.83325 13.4954 1.83325 14.0812 2.41904C14.667 3.00482 14.667 3.94763 14.667 5.83325L14.667 11.1666C14.667 13.0522 14.667 13.995 14.0812 14.5808C13.4954 15.1666 12.5526 15.1666 10.667 15.1666L10.0003 15.1666C8.11469 15.1666 7.17188 15.1666 6.58609 14.5808C6.07384 14.0685 6.00954 13.2833 6.00146 11.8333"
      stroke="white"
      stroke-linecap="round"
    />
    <path
      d="M10 8.5L1.33333 8.5M1.33333 8.5L3.66667 6.5M1.33333 8.5L3.66667 10.5"
      stroke="white"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
)

const options = [
  {
    icon: IconSetting,
    title: "Settings"
  },
  {
    icon: IconLogout,
    title: "Logout"
  }
]

export default function DropdownCustom({ view }: Props) {
  const [open, setOpen] = useState(false)
  const [selected, setSelected] = useState<string | null>(null)
  const dropdownRef = useRef<HTMLDivElement>(null)

  useEffect(() => {
    function handleClickOutside(e: MouseEvent) {
      if (
        dropdownRef.current &&
        !dropdownRef.current.contains(e.target as Node)
      ) {
        setOpen(false)
      }
    }
    document.addEventListener("mousedown", handleClickOutside)
    return () => document.removeEventListener("mousedown", handleClickOutside)
  }, [])

  return (
    <div className="relative inline-block" ref={dropdownRef}>
      <button
        onClick={() => setOpen(!open)}
        className="w-full flex items-center text-left">
        {view}
        {IconArrow}
      </button>

      {open && (
        <div className="absolute left-0 mt-2 py-1 w-full min-w-[113px] bg-[#1A1A1A] border border-[#FFFFFF33] rounded-lg shadow-lg z-10">
          {options.map((option) => (
            <div
              key={option.title}
              className="px-4 py-2 flex items-center gap-2 cursor-pointer"
              onClick={() => {
                setOpen(false)
              }}>
              {option.icon}
              <span>{option.title}</span>
            </div>
          ))}
        </div>
      )}
    </div>
  )
}

const IconArrow = (
  <svg
    width="14"
    height="14"
    viewBox="0 0 14 14"
    fill="none"
    xmlns="http://www.w3.org/2000/svg">
    <path
      d="M7.21623 9.23725L10.9669 5.36947C11.2009 5.12813 11.0591 4.66675 10.7508 4.66675L3.24951 4.66675C2.94126 4.66675 2.7994 5.12813 3.03344 5.36947L6.78409 9.23725C6.90843 9.36547 7.0919 9.36547 7.21623 9.23725Z"
      fill="#8B98A5"
    />
  </svg>
)
